{"path":"P6 - Information/_handouts/Comms 4 (Baseband modulation).pdf","text":"1B Paper 6: Communications Handout 4: Digital Baseband Modulation Ramji Venkataramanan Signal Processing and Communications Lab Department of Engineering rv285@cam.ac.uk Lent Term 2024 1 / 42 Data Transmission We have seen how analogue sources can be digitised. E.g., An MPEG or QuickTime file is a stream of bits ←→ . . . 10110010001101010 . . . Now we have to transport those bits across a channel: (Digitised source) 110 001 100 111 Transmitter Channel waveform input Receiver waveform output 110 000 100 111 2 / 42 110001 Channel Encoder Modulator 010110100 Channel waveform input Demodulator waveform output Channel Decoder 010010110 110001 Tx Rx The transmitter (Tx) does two things: 1. Encoding: Adding redundancy to the source bits to protect against noise 2. Modulation: Transforming the coded bits into waveforms. The receiver (Rx) does: • Demodulation: noisy output waveform −→ output bits • Decoding: Try to correct errors in the output bits and recover the source bits 3 / 42 Modulation/Demodulation We’ll first consider the modulation and demodulation blocks assuming that the channel encoder/decoder are fixed, and look at the design of the channel encoder and decoder later. (Encoded bits) 10110100 Modulator + x(t) Demodulator y (t) 10100110 n(t) We now study a digital baseband modulation technique called Pulse Amplitude Modulation (PAM) & analyse its performance over an Additive White Gaussian Noise (AWGN) channel 4 / 42 The Symbol Constellation The digital modulation scheme has two basic components. 1. The first is a mapping from bits to real/complex numbers, e.g. 0 → −A, 1 → A (binary symbols) 00 → −3A, 01 → −A, 10 → A, 11 → 3A (4-ary symbols) The set of values the bits are mapped to is called the constellation, e.g., the 4-ary constellation above is {−3A, A, A, 3A}. Once we fix a constellation, a sequence of bits can be uniquely mapped to constellation symbols. E.g., with constellation {−A, A} 0 1 0 1 1 1 0 0 1 0 −→ −A, A, −A, A, A, A, −A, −A, A, −A With constellation {−3A, −A, A, 3A}, the same sequence of bits is mapped as 01 01 11 00 10 −→ − A, −A, 3A, −3A, A In a constellation with M symbols, each symbol represents log2 M bits 5 / 42 The Pulse Shape 2. The second component of Pulse Amplitude Modulation is a unit-energy baseband waveform denoted p(t), called the pulse shape. E.g., a sinc pulse or a rect pulse: p(t) = 1 √T sinc ( πt T ) or p(t) = { 1√T for t ∈ (− T 2 , T 2 ] 0 otherwise T is called the symbol time of the pulse A sequence of constellation symbols X0, X1, X2, . . . is used to generate a baseband signal as follows xb(t) = ∑ k Xk p(t − kT ) Thus we have the following important steps to associate bits with a baseband signal xb(t): . . . 0 1 0 1 1 1 0 0 1 0 . . . −→ X0, X1, X2, . . . −→ ∑ k Xk p(t −kT ) 6 / 42 Rate of Transmission The modulated baseband signal is xb(t) = ∑ k Xk p(t − kT ). With the rect pulse shape p(t) = { 1√T for t ∈ (− T 2 , T 2 ] 0 otherwise and Xk ∈ {+A, −A}, xb(t) looks like tA/ √T−A/ √TT2T3T4T T 2 Every T seconds, a new symbol is introduced by shifting the pulse and modulating its amplitude with the symbol. The transmission rate is 1 T symbols/sec or log2 M T bits/second 7 / 42 Desirable Properties of the Pulse Shape p(t) p(t) is chosen to satisfy the following important objectives: 1. We want p(t) to decay quickly in time, i.e., the effect of symbol Xk should not start much before t = kT or last much beyond t = (k + 1)T 2. We want p(t) to be approximately band-limited. For a fixed sequence of symbols {Xk }, the spectrum of xb(t) is Xb(f ) = F [∑ k Xk p(t − kT ) ] = P(f ) ∑ k Xk e−j2πfkT Hence the bandwidth of xb(t) is the same as that of the pulse p(t) 3. The retrieval of the information sequence from the noisy received waveform xb(t) + n(t) should be simple and relatively reliable. In the absence of noise, the symbols {Xk }k∈Z should be recovered perfectly at the receiver. 8 / 42 Orthonormality of pulse shifts Consider the third objective, namely, simple and reliable detection. To achieve this, the pulse is chosen to have the following “orthonormal shifts” property: ∫ ∞ −∞ p(t − kT )p(t − mT ) dt = { 1 if k = m 0 if k ̸= m (1) We’ll see how this property makes signal detection at the Rx simple • This property is satisfied by the rect pulse shape p(t) = { 1√T for t ∈ ( −T 2 , T 2 ] 0 otherwise • The sinc pulse p(t) = 1√T sinc ( πt T ) also has orthonormal shifts! (You will show this in Examples Paper 9, Q.2) 9 / 42 Time Decay vs. Bandwidth Trade-off The first two objectives say that we want p(t) to: 1. Decay quickly in time 2. Be approximately band-limited But . . . faster decay in time ⇔ larger bandwidth Consider the pulse p(t) = 1√T sinc ( πt T ) p(t)0P(f) The sinc is perfectly band-limited to W = 1 2T But decays slowly in time |p(t)| ∼ 1 |t| 10 / 42 Next consider the rectangular pulse p(t) = { 1√T for t ∈ (− T 2 , T 2 ] 0 otherwise |P(f)| This pulse is perfectly time-limited to the interval [−T /2, T /2). But . . . • Decays slowly in freq. |P(f )| ∼ 1 |f | • Main-lobe bandwidth = 1 T 11 / 42 In practice, the pulse shape is often chosen to have a root raised cosine spectrum 0 1 2T −1 2TP (f ) Bandwidth slightly larger than 1 2T ; decay in time |p(t)| ∼ 1 |t|2 A happy compromise! • More on raised cosine pulses in 3F4 • For intuition, it often helps to envision xb(t) with a rect pulse, though it is never used in practice 12 / 42 Reminder Data → constellation symbols → continuous waveform Thus we have the following important steps to associate bits with a baseband signal xb(t): . . . 0 1 0 1 1 1 0 0 1 0 . . . −→ X0, X1, X2, . . . −→ ∑ k Xk p(t −kT ) 13 / 42 PAM Demodulation Now, assume that we have picked a constellation and a pulse shape satisfying the objectives, and we transmit the baseband waveform xb(t) = ∑ k Xk p(t − kT ) over a baseband channel y (t) = xb(t) + n(t) xb(t) y (t) n(t) How does the receiver recover the information symbols {X0, X1, X2, . . .} from y (t)? • This process is called demodulation • We will see that the orthonormal shift property of p(t) leads to a simple and elegant demodulator 14 / 42 Matched Filter Demodulator Let us first understand the operation assuming no noise, i.e., y (t) = xb(t) = ∑ k Xk p(t − kT ) h(t) = p(−t) Filter y(t) r(t) t = mT r(mT ) y (t) is passed through a filter with impulse response h(t) = p(−t) This is called a matched filter. The filter output is r (t) = y (t) ⋆ h(t) = xb(t) ⋆ h(t) (assuming no noise) = ∫ ∞ −∞ xb(τ )h(t − τ )dτ = ∫ ∞ −∞ xb(τ )p(τ − t)dτ = ∑ k Xk ∫ ∞ −∞ p(τ − kT )p(τ − t)dτ 15 / 42 Matched filter output h(t) = p(−t) Filter y(t) r(t) t = mT r(mT ) r (t) = ∑ k Xk ∫ ∞ −∞ p(τ − kT )p(τ − t)dτ = ∑ k Xk ∫ ∞ −∞ p(u + t − kT )p(u) du (using u = τ − t) = ∑ k Xk g (t − kT ) where g (t) = ∫ ∞ −∞ p(u + t)p(u) du Matched filter output r (t) is of the form as the PAM signal, except that the ‘pulse’ is now g (t) 16 / 42 Sampled matched filter output h(t) = p(−t) Filter y(t) r(t) t = mT r(mT ) By sampling the filter output at time t = mT , m = 0, 1, 2, . . ., you get r (mT ) = ∑ k Xk g ((m − k)T ) Because of the orthonormal shifts property of p(t) g ((m − k)T ) = ∫ ∞ −∞ p(u + (m − k)T ) p(u) du = { 1 if k = m 0 if k ̸= m Therefore, r (mT ) = ∑ k Xk g ((m − k)T ) = Xm Orthonormal shifts property is crucial for this demodulator to work! 17 / 42 For two different choices of pulse p(t), we now visualize • the transmitted PAM signal ∑ k Xk p(t − kT ), and • the matched filter output r (t) = ∑ k Xk g (t − kT ) 18 / 42 Example 1: Transmitted signal Rectangular pulse: p(t) = { 1√T for t ∈ (− T 2 , T 2 ] 0 otherwise Assume T = 1 and the symbols {X0, X1, X2, X3} = {1, 1, −1, 1} -1 0 1 2 3 4 Time -1 -0.5 0 0.5 1 -1 0 1 2 3 4 Time -1 -0.5 0 0.5 1 Right panel shows the transmitted PAM signal ∑3 k=0 Xk p(t − kT ) Left panel shows each component of the sum separately 19 / 42 Example 1: Matched filter output h(t) = p(−t) Filter y(t) r(t) t = mT r(mT ) Matched filter output r (t) = ∑3 k=0 Xk g (t − kT ) g (t) = ∫ ∞ −∞ p(u + t)p(u)du = { 1 + t T , −T ≤ t ≤ 0, 1 − t T , 0 ≤ t ≤ T -1 0 1 2 3 4 Time -1 -0.5 0 0.5 1 -1 0 1 2 3 4 Time -1 -0.5 0 0.5 1 Left: each component of the sum separately, Right: r (t) 20 / 42 Example 2 A practical choice: Root-raised cosine pulse p(t) 0 1 2T −1 2TP (f ) Assume T = 10 and the symbols {X0, X1, X2, X3} = {1, 1, −1, 1} Let us visualise : • the transmitted PAM signal ∑3 k=0 Xk p(t − kT ), and • the matched filter output r (t) = ∑3 k=0 Xk g (t − kT ) 21 / 42 Transmitted PAM signal ∑3 k=0 Xk p(t − kT ): Matched filter output r (t) = ∑3 k=0 Xk g (t − kT ): Figures from Principles of Digital Communication by B. Rimoldi, CUP 2016. 22 / 42 What happens when there is noise at the receiver? 23 / 42 Demodulation with Noisy y (t) Now consider the noisy case. The receiver gets y (t) = x(t) + n(t) h(t) = p(−t) Filter y(t) r(t) t = mT r(mT ) The matched filter output is r (t) = y (t) ⋆ h(t) = xb(t) ⋆ h(t) + n(t) ⋆ h(t) = ∑ k Xk g (t − kT ) + ∫ ∞ −∞ n(τ )p(τ − t)dτ Sampling at t = mT , m = 0, 1, 2, . . ., we now get r (mT ) = Xm + Nm where Nm is noise part of the filter output at time mT : Nm = ∫ ∞ −∞ n(τ )p(τ − mT )dτ 24 / 42 Properties of the Noise Let us denote r (mT ), the sampled output at time mT , by Ym. Ym = Xm + Nm, m = 0, 1, 2, . . . Note that this is a discrete-time channel. We have converted the continuous-time problem into a discrete-time one of detecting the symbols Xm from the noisy outputs Ym. • To do this, we first need to understand the properties of the noise Nm. Recall that Nm = ∫ ∞ ∞ n(τ )p(τ − mT )dτ • Nm is a random variable whose distribution depends on the statistics of the random process n(t). You will learn about random processes and their characterisation in 3F1 & 3F4, but this is outside the scope of this course. For now, we will directly specify the distribution of Nm and analyse the detection problem. 25 / 42 Ym = Xm + Nm, m = 0, 1, 2, . . . Modelling n(t) as a Gaussian process leads to the following important characterisation of Nm: • For each m, Nm is a Gaussian random variable with zero mean, and variance σ2 that can be estimated empirically • Further N1, N2, . . . are independent • Thus the sequence of random variables {Nm}, m = 0, 1, . . . are independent and identically distributed as N (0, σ2). Detection • At the Rx, how do we detect the information symbol Xm from Ym for m = 0, 1, . . .? • Remember that each Xm belongs to the symbol constellation 26 / 42 Detection for Binary PAM Let’s start with a simple binary constellation, then generalise. Consider a constellation where each Xm ∈ {−A, A}. This is called binary PAM or BPSK (‘Binary Phase Shift Keying’) Y = X + N The detection problem is now: Given Y , how to decide whether X = A or X = −A? Observe that: Y = A + N if X = A and Y = −A + N if X = −A • N is distributed as N (0, σ2) • Therefore the pdf f (Y |X = A) is Gaussian with mean A and variance σ2 • Similarly the pdf f (Y |X = −A) is Gaussian with mean −A and variance σ2 Note: Adding a constant to a random variable just shifts the mean, does not change the shape of the distribution 27 / 42 −A A f (Y |X = −A) f (Y |X = A) Y Let ˆX denote the decoded symbol. When the symbols A and −A are a priori equally likely, the optimal detection rule is: ˆX = A if f (Y | X = A) ≥ f (Y | X = −A) ˆX = −A if f (Y | X = −A) > f (Y | X = A) “Choose the symbol from which Y is most likely to have occurred” • This decoder is called the maximum-likelihood decoder • This decoder is intuitive and seems sensible, and is in fact, the optimal detection rule when all the constellation symbols are equally likely (we will not prove this here) • It is then a special case of the Maximum a Posteriori (MAP) detection rule, which minimises the probability of detection error (discussed in 3F4) 28 / 42 −A A f (Y |X = −A) f (Y |X = A) Y The detection rule can be compactly written as ˆX = arg max x∈{A,−A} f (Y |X = x) ˆX = arg max x∈{A,−A} f (Y |X = x) = arg max x∈{A,−A} 1 √2πσ2 e−(Y −x)2/2σ2 = arg min x∈{A,−A} (Y − x) 2 Thus the detection rule is just: ˆX = A if Y ≥ 0, ˆX = −A if Y < 0 “Choose the constellation symbol closest to the output Y ” 29 / 42 Decision Regions The detection rule partitions the space of Y (the real line) into decision regions. For binary PAM, we just derived the following decision regions: −A A ˆX = AˆX = −A Y Q: When does the detector make an error? A: When X = A and Y < 0, or When X = −A and Y > 0 We will calculate the probability of error shortly, but let’s first find the detection rule for general PAM constellations 30 / 42 Detection for General PAM Constellations The detection rule can easily be extended to a general constellation C • E.g., C may be the 3-ary constellation {−2A, 0, 2A} or a 4-ary constellation {−3A, −A, A, 3A} • The maximum-likelihood principle is the same: “Choose the constellation symbol from which y is most likely to have occurred ” ˆX = arg max x∈ C f (Y |X = x) = arg max x∈ C 1 √ 2πσ2 e−(Y −x)2/2σ2 = arg min x∈ C (Y − x)2 Thus, the detection rule for any PAM constellation boils down to: “Choose the constellation symbol closest to the output Y ” 31 / 42 Example: 3-ary PAM Y = X + N, N ∼ N (0, σ2) What is the optimal detection rule and the associated decision regions if X belongs to the 3-ary constellation {−2A, 0, 2A}? The “nearest symbol to Y ” decoding rule yields ˆX =    −2A if Y < −A 0 if − A ≤ Y < A 2A if Y > A −2A 2A ˆX = 2AˆX = −2A −A A ˆX = 0 Y 0 32 / 42 Probability of Detection Error Y = X + N Consider binary PAM with X ∈ {A − A}. The decision regions are: −A A ˆX = AˆX = −A Y The detector makes an error when X = A and Y < 0, or when X = −A and Y > 0 The probability of detection error is Pe = P( ˆX ̸= X ) = P(X = −A)P( ˆX = A| X = −A) + P(X = A)P( ˆX = −A| X = A) = 1 2 P( ˆX = A | X = −A) + 1 2 P( ˆX = −A | X = A) (The symbols are equally likely ⇒ P(X = A) = P(X = −A) = 1 2 ) 33 / 42 Let us first examine P( ˆX = A | X = −A) P( ˆX = A | X = −A) = P(Y > 0 | X = −A) = P(−A + N > 0 | X = −A) = P(N > A | X = −A) (a) = P(N > A) (a) is true because the noise random variable N is independent of the transmitted symbol X . Similarly, P( ˆX = −A | X = A) = P(Y < 0 | X = A) = P(A + N < 0 | X = A) = P(N < −A | X = A) = P(N < −A) 34 / 42 The probability of detection error is therefore Pe = 1 2 P( ˆX = A | X = −A) + 1 2 P( ˆX = −A | X = A) = 1 2 P(N > A) + 1 2 P(N < −A) (b) = P(N > A) (c) = P ( N σ > A σ ) • (b) holds due to the symmetry of the Gaussian pdf N (0, σ2): −A A0 P (N > A)P (N < −A) • In (c), we have expressed the probability in terms of a standard Gaussian random variable with distribution N (0, 1) • Recall from 1B Paper 7 (Probability) that if N is distributed as N (0, σ2) then N σ is distributed as N (0, 1) 35 / 42 The Q-function The error probability is usually expressed in terms of the Q-function, which is defined as: Q(x) = ∫ ∞ x 1√2π e−u2/2du x0 Q(x) N (0, 1) pdf • Q(x) is the probability that a standard Gaussian N (0, 1) random variable takes value greater than x • Also note that Q(x) = 1 − Φ(x), where Φ(.) is the cdf of a N (0, 1) random variable 36 / 42 Pe in terms of the signal-to-noise ratio The probability of detection error is therefore Pe = P(N > A) = P ( N σ > A σ ) = Q ( A σ ) = Q (√ Es σ2 ) where Es is the average energy per symbol of the constellation: Es = 1 2 (A 2 + (−A) 2) = A 2 • For a binary constellation, each symbol corresponds to 1 bit. ⇒ the average energy per bit Eb is also equal to A2 in this case • For an M-point constellation, the average energy per symbol Es = Eb log2 M • Eb σ2 is called the signal-to-noise ratio (snr) of the transmission scheme • Pe can be plotted as a function of the snr Eb σ2 . . . 37 / 42 Pe vs snr for binary PAM −2 0 2 4 6 8 10 12 14 16 18 10 −16 10 −14 10 −12 10 −10 10 −8 10 −6 10 −4 10 −2 10 0 snr E b/σ 2 (dB)Pe To get Pe of 10−3, we need snr Eb/σ2 ≈ 9 dB 38 / 42 Error Probability vs Transmit Power The probability of error for binary PAM decays rapidly as snr ↑: • Q(x) ≈ e−x 2/2 for large x > 0 ⇒ Pe ≈ e−snr/2 Can we set the snr Eb σ2 to be as high as we want, by increasing Eb? (i.e., by increasing A since Eb = Es = A2 for binary PAM) • The problem is that transmitted power also increases! • Intuition: 1 symbol transmitted every T seconds with average energy Es ⇒ transmit power is Es /T • Thus as you increase the snr, you battery drains faster! 39 / 42 Power of PAM signal xb(t) = ∑ k Xk p(t − kT ) With any constellation the power of the baseband PAM signal xb(t) is Es T = Eb log2 M T , where • Es is the average symbol energy of the constellation. • Eb is the average energy per bit Intuition: • In each symbol period of length T , a symbol with average energy Es modulates a unit energy pulse • A rigorous calculation of power has to take into account the fact that the transmitted symbols X1, X2, . . . are drawn randomly from the constellation (done in 3F4) 40 / 42 Pulse Amplitude Modulation - The Key Points 10110100 Modulator + xb(t) Demodulator y (t) 10100100 n(t) PAM is a way to map a sequence of information bits to a continuous-time baseband waveform 1. Pick a constellation, map the information bits to symbols X1, X2, . . . in the constellation 2. These symbols then modulate the amplitude of a pulse shape p(t) to generate the baseband waveform xb(t) xb(t) = ∑ k Xk p(t − kT ) 41 / 42 Desirable properties of the pulse shape p(t): • p(t) should decay quickly in time; its bandwidth W shouldn’t be too large • Orthonormal shifts property for simple and reliable decoding At the receiver, first demodulate then detect: • The demodulator is a matched filter with IR h(t) = p(−t) • Matched filter output is sampled at times . . . , 0, T , 2T , . . .. At time mT , the output is Ym = Xm + Nm Nm is Gaussian noise with zero mean and variance σ2 that can be empirically estimated • Detection rule: ˆXm = the constellation symbol closest to Ym Probability of detection error can be calculated: • Decays exponentially with snr Es /σ2 • Es is average energy/symbol of the constellation; power of PAM waveform xb(t) is Es /T 42 / 42","libVersion":"0.2.4","langs":""}